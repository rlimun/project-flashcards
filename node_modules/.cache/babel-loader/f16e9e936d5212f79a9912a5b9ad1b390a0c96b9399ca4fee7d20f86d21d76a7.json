{"ast":null,"code":"var _jsxFileName = \"/Users/rlimun/SWE_Program/Front-End-Development/react-assessment/project-flashcards/src/Layout/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  handleStudyClick,\n  handleCreateDeckClick,\n  handleViewClick\n}) => {\n  _s();\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await listDecks();\n      setDecks(data || []);\n    };\n    fetchData();\n  }, []);\n\n  /** \n  * Delete Deck prompt\n  * When the user clicks the Delete button, a warning message is shown and the user can click OK or Cancel. \n  * If the user clicks OK, the deck is deleted and the deleted deck is no longer visible on the Home screen.\n  **/\n  const handleDelete = deckId => {\n    const confirmed = window.confirm('Delete this deck? You will not be able to recover it');\n    if (confirmed) {\n      deleteDeck(deckId);\n      setDecks(decks.filter(deck => deck.id !== deckId));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateDeckClick,\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), decks.map(deck => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [deck.name, \" \", deck.cards.length, \" cards\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStudyClick(deck.id),\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleViewClick(deck.id),\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"delete\",\n        onClick: () => handleDelete(deck.id),\n        children: \" Delete \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, deck.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n_s(Home, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Link","listDecks","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","handleStudyClick","handleCreateDeckClick","handleViewClick","_s","decks","setDecks","fetchData","data","handleDelete","deckId","confirmed","window","confirm","deleteDeck","filter","deck","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","name","cards","length","to","_c","$RefreshReg$"],"sources":["/Users/rlimun/SWE_Program/Front-End-Development/react-assessment/project-flashcards/src/Layout/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { listDecks } from \"../utils/api\";\n\n\n\nconst Home = ({ handleStudyClick, handleCreateDeckClick, handleViewClick }) => {\n    const [decks, setDecks] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async() => {\n            const data = await listDecks();\n            setDecks(data || []);\n        };\n\n        fetchData();\n    }, []);\n\n        /** \n    * Delete Deck prompt\n    * When the user clicks the Delete button, a warning message is shown and the user can click OK or Cancel. \n    * If the user clicks OK, the deck is deleted and the deleted deck is no longer visible on the Home screen.\n    **/\n        const handleDelete = (deckId) => {\n            const confirmed = window.confirm('Delete this deck? You will not be able to recover it');\n            if (confirmed) {\n                deleteDeck(deckId);\n                setDecks(decks.filter((deck) => deck.id !== deckId));\n            }\n        }\n\n    return (\n        <>\n            <button onClick={handleCreateDeckClick}>Create Deck</button>\n            { decks.map((deck) => (\n                <div key={deck.id}>\n                    <p>{deck.name} {deck.cards.length} cards</p>\n                \n                    {/* Clicking the Study button brings the user to the Study screen. */}\n                    <button onClick={() => handleStudyClick(deck.id)}>Study</button>\n\n                    {/* Clicking the View button brings the user to the Deck screen. */}\n                    <Link to={`/decks/${deck.id}`}>\n                        <button onClick={() => handleViewClick(deck.id)}>View</button>\n                    </Link>\n                    {/*Clicking the Delete button shows a warning message before deleting the deck.*/}\n                    <button name=\"delete\" onClick={() => handleDelete(deck.id)}> Delete </button>\n                </div>\n            ))}\n        </>\n    )\n\n}\n\n\nexport default Home;\n\n              "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}