{"ast":null,"code":"// import React, { useState , useEffect } from \"react\";\n// import { readDeck } from \"../utils/api\";\n// import { Link, useParams, useHistory } from \"react-router-dom\";\n// import CardsList from \"./CardsList\";\n// import { deleteDeck } from \"../utils/api\";\n\n// const Deck = () => {\n//     const deckId = useParams();\n//     const [ deck, setDeck ] = useState({ cards: []});\n//     const history = useHistory();\n\n//     useEffect(() => {\n//         const abortController = new AbortController();\n//         const fetchDeck = async() => {\n//             try {\n//                 const response = await readDeck(deckId, abortController.signal);\n//                 const data = await response.json();\n//                 setDeck(data);\n//                 console.log('deck data', data);\n//             }\n//             catch(error){\n//                 console.log('Error fetching decks', error);\n//             }\n//         }\n//         fetchDeck();\n//         return () => {\n//             abortController.abort();\n//         }\n//     }, [deckId]);\n\n//     const handleEditButton = (deckId) => {\n//         history.push(`/decks/${deckId}/edit`);\n//     }\n\n//     const handleStudyButton = (deckId) => {\n//         history.push(`/decks/${deckId}/study`);\n//     }\n\n//     // const handleAddCardsButton = (deckId) => {\n//     //     history.push(`/decks/${deckId}/cards/new`);\n//     // }\n\n//     const handleDeleteButton = async (deckId) => {\n//         const confirmed = window.confirm('Delete this deck? You will not be able to recover it');\n//         if (confirmed) {\n//             try {\n//                 await deleteDeck(deckId);\n//                // setDecks((prevDecks) => prevDecks.filter((deck) => deck.id !== deckId));\n//                 history.go(0);\n//             } catch(error){\n//                 console.error(\"Error deleting deck\", error);\n//             }\n//         }\n//     };\n\n//     const navBar = (\n//         <nav>\n//             <ol className=\"breadcrumb\">\n//                 <li className=\"breadcrumb-item\">\n//                     <Link to=\"/\">Home</Link>\n//                 </li>\n//                 <li className=\"breadcrumb-item\">\n//                     {deck.name}\n//                 </li>\n//             </ol>\n//         </nav>\n//     )\n\n//     return (\n//         <div>\n//             <div>\n//                 {navBar}\n//                 <h3>{deck.name}</h3>\n//                 <p>{deck.description}</p>\n//                 <button onClick={handleEditButton(deck.id)}>Edit</button>\n//                 <button onClick={handleStudyButton(deck.id)}>Study</button>\n//                 {/* <button onClick={handleAddCardsButton(deck.id)}>Add Cards</button> */}\n//                 <button onClick={handleDeleteButton(deck.id)}>Delete</button>\n//             </div>\n//             <div>\n//                 <CardsList deck={deck} setDeck={setDeck}/>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Deck;\n\n// //01/10/2023 - this page goies to a 404, when i click on the edit deck button, it goes to 404","map":{"version":3,"names":[],"sources":["/Users/rlimun/SWE_Program/Front-End-Development/react-assessment/project-flashcards/src/Layout/Deck.js"],"sourcesContent":["// import React, { useState , useEffect } from \"react\";\n// import { readDeck } from \"../utils/api\";\n// import { Link, useParams, useHistory } from \"react-router-dom\";\n// import CardsList from \"./CardsList\";\n// import { deleteDeck } from \"../utils/api\";\n\n\n// const Deck = () => {\n//     const deckId = useParams();\n//     const [ deck, setDeck ] = useState({ cards: []});\n//     const history = useHistory();\n\n//     useEffect(() => {\n//         const abortController = new AbortController();\n//         const fetchDeck = async() => {\n//             try {\n//                 const response = await readDeck(deckId, abortController.signal);\n//                 const data = await response.json();\n//                 setDeck(data);\n//                 console.log('deck data', data);\n//             }\n//             catch(error){\n//                 console.log('Error fetching decks', error);\n//             }\n//         }\n//         fetchDeck();\n//         return () => {\n//             abortController.abort();\n//         }\n//     }, [deckId]);\n\n//     const handleEditButton = (deckId) => {\n//         history.push(`/decks/${deckId}/edit`);\n//     }\n\n//     const handleStudyButton = (deckId) => {\n//         history.push(`/decks/${deckId}/study`);\n//     }\n\n//     // const handleAddCardsButton = (deckId) => {\n//     //     history.push(`/decks/${deckId}/cards/new`);\n//     // }\n\n//     const handleDeleteButton = async (deckId) => {\n//         const confirmed = window.confirm('Delete this deck? You will not be able to recover it');\n//         if (confirmed) {\n//             try {\n//                 await deleteDeck(deckId);\n//                // setDecks((prevDecks) => prevDecks.filter((deck) => deck.id !== deckId));\n//                 history.go(0);\n//             } catch(error){\n//                 console.error(\"Error deleting deck\", error);\n//             }\n//         }\n//     };\n\n//     const navBar = (\n//         <nav>\n//             <ol className=\"breadcrumb\">\n//                 <li className=\"breadcrumb-item\">\n//                     <Link to=\"/\">Home</Link>\n//                 </li>\n//                 <li className=\"breadcrumb-item\">\n//                     {deck.name}\n//                 </li>\n//             </ol>\n//         </nav>\n//     )\n\n//     return (\n//         <div>\n//             <div>\n//                 {navBar}\n//                 <h3>{deck.name}</h3>\n//                 <p>{deck.description}</p>\n//                 <button onClick={handleEditButton(deck.id)}>Edit</button>\n//                 <button onClick={handleStudyButton(deck.id)}>Study</button>\n//                 {/* <button onClick={handleAddCardsButton(deck.id)}>Add Cards</button> */}\n//                 <button onClick={handleDeleteButton(deck.id)}>Delete</button>\n//             </div>\n//             <div>\n//                 <CardsList deck={deck} setDeck={setDeck}/>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Deck;\n\n// //01/10/2023 - this page goies to a 404, when i click on the edit deck button, it goes to 404"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}