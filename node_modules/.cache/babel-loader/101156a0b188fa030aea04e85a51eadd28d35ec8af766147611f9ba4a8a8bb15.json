{"ast":null,"code":"var _jsxFileName = \"/Users/rlimun/SWE_Program/Front-End-Development/react-assessment/project-flashcards/src/Layout/Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { listDecks, deleteDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  // const [decks, setDecks] = useState([]);\n  // const history = useHistory();\n\n  // useEffect(() => {\n  //     // async function fetchData() {\n  //     //     const abortController = new AbortController();\n  //     //     try {\n  //     //         const data = await listDecks(abortController.signal);\n  //     //         setDecks(data);\n  //     //     } catch(error) {\n  //     //         console.error(\"error\", error);\n  //     //     }\n  //     //     return () => {\n  //     //         abortController.abort();\n  //     //     };\n  //     // }\n  //     async function fetchData() {\n  //         const data = await listDecks();\n  //         setDecks(data);\n  //     }\n  //     fetchData();\n  // }, []);\n\n  // const handleStudyClick = (deckId) => {\n  //      history.push(`/decks/${deckId}/study`);\n  //  }\n\n  //  const handleCreateDeckClick = (deckId) => {\n  //      history.push(\"/decks/new\");\n  //  }\n\n  //  const handleViewClick = (deckId) => {\n  //      history.push(`/decks/${deckId}`);\n  //  }\n\n  // /** \n  // * Delete Deck prompt\n  // * When the user clicks the Delete button, a warning message is shown and the user can click OK or Cancel. \n  // * If the user clicks OK, the deck is deleted and the deleted deck is no longer visible on the Home screen.\n  // **/\n  // const handleDelete = (deckId) => {\n  //     const confirmed = window.confirm('Delete this deck? You will not be able to recover it');\n  //     if (confirmed) {\n  //         deleteDeck(deckId);\n  //         setDecks(decks.filter((deck) => deck.id !== deckId));\n  //         history.go(0);\n  //     }\n  // }\n\n  // return (\n  //     <div className=\"Home\">\n  //         <button onClick={handleCreateDeckClick}>Create Deck</button>\n  //         { decks.map((deck) => (\n  //             <div key={deck.id}\n  //             className=\"card\"\n  //             >\n  //                 <div className=\"card-container\">\n  //                     <h4>{deck.name} {deck.cards.length} cards</h4>\n  //                     <p>{deck.description}</p>\n  //                     {/* Clicking the View button brings the user to the Deck screen. */}\n  //                     <Link to={`/decks/${deck.id}`}>\n  //                         <button onClick={() => handleViewClick(deck.id)}>View</button>\n  //                     </Link>\n  //                     {/* Clicking the Study button brings the user to the Study screen. */}\n  //                     <Link to={`/decks/${deck.id}/study`}>\n  //                         <button onClick={() => { console.log(\"Button clicked!\"); handleStudyClick(deck.id); }}>Study</button>\n  //                     </Link>\n  //                     {/*Clicking the Delete button shows a warning message before deleting the deck.*/}\n  //                     <button name=\"delete\" onClick={() => handleDelete(deck.id)}> Delete </button>\n  //                 </div>\n  //             </div>\n  //         ))}\n  //     </div>\n  // )\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","listDecks","deleteDeck","jsxDEV","_jsxDEV","Home","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rlimun/SWE_Program/Front-End-Development/react-assessment/project-flashcards/src/Layout/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { listDecks, deleteDeck } from \"../utils/api\";\n\n\nconst Home = () => {\n    // const [decks, setDecks] = useState([]);\n    // const history = useHistory();\n\n    // useEffect(() => {\n    //     // async function fetchData() {\n    //     //     const abortController = new AbortController();\n    //     //     try {\n    //     //         const data = await listDecks(abortController.signal);\n    //     //         setDecks(data);\n    //     //     } catch(error) {\n    //     //         console.error(\"error\", error);\n    //     //     }\n    //     //     return () => {\n    //     //         abortController.abort();\n    //     //     };\n    //     // }\n    //     async function fetchData() {\n    //         const data = await listDecks();\n    //         setDecks(data);\n    //     }\n    //     fetchData();\n    // }, []);\n\n    // const handleStudyClick = (deckId) => {\n    //      history.push(`/decks/${deckId}/study`);\n    //  }\n \n    //  const handleCreateDeckClick = (deckId) => {\n    //      history.push(\"/decks/new\");\n    //  }\n \n    //  const handleViewClick = (deckId) => {\n    //      history.push(`/decks/${deckId}`);\n    //  }\n\n    // /** \n    // * Delete Deck prompt\n    // * When the user clicks the Delete button, a warning message is shown and the user can click OK or Cancel. \n    // * If the user clicks OK, the deck is deleted and the deleted deck is no longer visible on the Home screen.\n    // **/\n    // const handleDelete = (deckId) => {\n    //     const confirmed = window.confirm('Delete this deck? You will not be able to recover it');\n    //     if (confirmed) {\n    //         deleteDeck(deckId);\n    //         setDecks(decks.filter((deck) => deck.id !== deckId));\n    //         history.go(0);\n    //     }\n    // }\n    \n\n    // return (\n    //     <div className=\"Home\">\n    //         <button onClick={handleCreateDeckClick}>Create Deck</button>\n    //         { decks.map((deck) => (\n    //             <div key={deck.id}\n    //             className=\"card\"\n    //             >\n    //                 <div className=\"card-container\">\n    //                     <h4>{deck.name} {deck.cards.length} cards</h4>\n    //                     <p>{deck.description}</p>\n    //                     {/* Clicking the View button brings the user to the Deck screen. */}\n    //                     <Link to={`/decks/${deck.id}`}>\n    //                         <button onClick={() => handleViewClick(deck.id)}>View</button>\n    //                     </Link>\n    //                     {/* Clicking the Study button brings the user to the Study screen. */}\n    //                     <Link to={`/decks/${deck.id}/study`}>\n    //                         <button onClick={() => { console.log(\"Button clicked!\"); handleStudyClick(deck.id); }}>Study</button>\n    //                     </Link>\n    //                     {/*Clicking the Delete button shows a warning message before deleting the deck.*/}\n    //                     <button name=\"delete\" onClick={() => handleDelete(deck.id)}> Delete </button>\n    //                 </div>\n    //             </div>\n    //         ))}\n    //     </div>\n    // )\n    return (\n        <p>hi</p>\n    )\n}\n\n\nexport default Home;\n\n              "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,SAASC,SAAS,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACID,OAAA;IAAAE,QAAA,EAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAEjB,CAAC;AAAAC,EAAA,GA/EKN,IAAI;AAkFV,eAAeA,IAAI;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}